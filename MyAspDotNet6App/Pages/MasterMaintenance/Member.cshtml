@page
@model MyAspDotNet6App.Pages.MasterMaintenance.MemberModel
@{
    ViewData["Title"] = "メンバーマスター";
}
<form action="" method="POST">
    <div class="row">
        <div class="col-3">
            <label asp-for="SearchCondition.MemberNamePart" class="form-label"></label>
            <input asp-for="SearchCondition.MemberNamePart" type="text" class="form-control" />
        </div>
        <div class="col-3">
            <label asp-for="SearchCondition.JoinedDateFrom" class="form-label"></label>
            <input asp-for="SearchCondition.JoinedDateFrom" type="date" class="form-control" />
        </div>
        <div class="col-3">
            <label asp-for="SearchCondition.JoinedDateTo" class="form-label"></label>
            <input asp-for="SearchCondition.JoinedDateTo" type="date" class="form-control" />
        </div>
    </div>
    @Html.AntiForgeryToken()
</form>
<div class="row mt-2">
    <div class="d-flex flex-row">
        <button id="searchButton" class="btn btn-primary">
            <i class="bi bi-search"></i> 検索
        </button>
        <button id="clearButton" class="btn btn-primary ms-2">
            <i class="bi bi-eraser-fill"></i> クリア
        </button>
    </div>
</div>
<div id="resultDiv" class="mt-2"></div>
@section Scripts {
    <script>
        const form = document.querySelector("form");
        const searchButton = document.querySelector("#searchButton");
        const resultDiv = document.querySelector("#resultDiv");
        const clearButton = document.querySelector("#clearButton");
        searchButton.addEventListener("click", () => search());
        clearButton.addEventListener("click", () => clearForm());
        form.addEventListener("keydown", (e) => {
            if (e.keyCode === 13) {
                search();
                e.preventDefault();
            }
        });
        function search() {
            let formData = new FormData(form);
            fetch("?Handler=SearchMember", { method: "POST", body: new URLSearchParams(formData) })
                .then((response) => {
                    if (!response.ok) {
                        throw new Error("読み込みに失敗しました");
                    }
                    return response.text();
                })
                .then((text) => {
                    resultDiv.innerHTML = text;
                })
                .catch((error) => {
                    resultDiv.innerHTML = "<div>" + error + "</div>";
                });
        }
        function clearForm() {
            form.reset();
            resultDiv.innerHTML = "";
        }
    </script>
}
